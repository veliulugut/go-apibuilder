volumes:
  postgres_data:

networks:
  app-network:

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    ports:
      - "${APP_PORT:-8080}:${APP_PORT:-8080}"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
  db:
    image: postgres:16-alpine
    ports:
      - "${POSTGRES_HOST_PORT:-127.0.0.1:5432}:${POSTGRES_PORT:-5432}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-user} -d $${POSTGRES_DB:-mydatabase}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
       - "${REDIS_HOST_PORT:-127.0.0.1:6379}:${REDIS_PORT:-6379}"
    networks:
      - app-network
